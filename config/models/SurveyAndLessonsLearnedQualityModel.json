{
  "name": "Survey and Lessons Learned Quality Model",
  "viewpoints": [
    {
      "name": "Developer Viewpoint",
      "characteristics": [
        {
          "name": "Economic",
          "sub_characteristics": [
            {
              "name": "Cost",
              "measurable_concepts": [
                {
                  "name": "Bug fixing cost",
                  "impact": "NEGATIVE",
                  "entity": "issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the bug fixing cost in the project",
                  "quality_requirement": "Increased bug fixing costs affect overall costs negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of bugs to fix",
                      "unit": "bug(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/bug_fixing_cost/NumberOfBugsToFixVisitor.py"
                    },
                    {
                      "name": "Number of contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/PyGithubCommunityCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Maintenance cost",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the cost of maintenance",
                  "quality_requirement": "Elevated levels of maintenance costs affect overall costs negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Sqale Index - Technical Debt",
                      "unit": "minutes and/or days",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/maintenance_cost/SqaleIndexVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Contributors",
                  "impact": "POSITIVE",
                  "entity": "contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors in the project",
                  "quality_requirement": "Increased number of contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/PyGithubCommunityCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Core Maintainers",
                  "impact": "POSITIVE",
                  "entity": "core contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of core contributors in the project",
                  "quality_requirement": "Increased number of core contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Truck Factor",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/TruckFactorVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Throughput",
                  "impact": "POSITIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the ratio of closed issues to total issues in the project",
                  "quality_requirement": "Increased closed issues to total issues ratio affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of closed issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurClosedIssuesCountVisitor.py"
                    },
                    {
                      "name": "Number of total issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Duration",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the duration to resolve issues",
                  "quality_requirement": "Longer durations to resolve issues affect community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Closed Issue Resolution Duration",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/DurationToResolveIssuesVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Accepted",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The amount of pull requests accepted in the project",
                  "quality_requirement": "Affects community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Change Requests Accepted Count",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/reviews_accepted/ReviewsAcceptedCountVisitor.py"
                    },
                    {
                      "name": "Reviews Accepted - Total PR Ratio",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/reviews_accepted/ReviewsAcceptedRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Declined",
                  "impact": "NEGATIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The amount of pull requests rejected in the project",
                  "quality_requirement": "Affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Reviews Declined Count",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/declined_changes/ReviewsDeclinedCountVisitor.py"
                    },
                    {
                      "name": "Reviews Declined - Total PR Ratio",
                      "unit": "ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                      "base_measures": [
                        {
                          "name": "Reviews Declined Count",
                          "unit": "pull request(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/product_evolution/declined_changes/ReviewsDeclinedCountVisitor.py"
                        },
                        {
                          "name": "Number of Total Issues",
                          "unit": "pull request(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Issues New",
                  "impact": "POSITIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Amount of new issues in the version control history",
                  "quality_requirement": "New issues are a proxy for activity and affect community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Issues Count",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesCountVisitor.py"
                    },
                    {
                      "name": "New Issues Ratio",
                      "unit": "new issues in a period - total issues ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issues Active",
                  "impact": "POSITIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Amount of active issues in the version control history",
                  "quality_requirement": "Updating issues signals community activity and affect community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Issues Count",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesCountVisitor.py"
                    },
                    {
                      "name": "New Issues Ratio",
                      "unit": "new issues in a period - total issues ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issues Closed",
                  "impact": "POSITIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Amount of closed issues in the version control history",
                  "quality_requirement": "Closing issues is a proxy for community activity and affect community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Closed Issues Count",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurClosedIssuesCountVisitor.py"
                    },
                    {
                      "name": "Closed Issues Ratio",
                      "unit": "closed issues in a period - total issues ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_closed/ClosedIssuesRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Age Average",
                  "impact": "NEGATIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of how long issues have been open for",
                  "quality_requirement": "Long open issue age affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Open Issue Age",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/staleness/OpenIssueAgeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Resolution Duration",
                  "impact": "NEGATIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The duration of time taken to accept or decline a pull request",
                  "quality_requirement": "Longer time to resolve pull requests affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Duration to Resolve Pull Requests",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_requests_duration/DurationToResolvePullRequestsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Flexible maintenance according to individual needs",
                  "impact": "POSITIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Ease of maintenance of the source code",
                  "quality_requirement": "Easy maintainability contributes to the overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Sqale Rating",
                      "unit": "rating",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/maintainability_rating/SqaleRatingVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Absence of license fees",
                  "impact": "POSITIVE",
                  "entity": "Software licenses",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of absence of fees",
                  "quality_requirement": "Absence of fees affects cost positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "License",
                      "unit": "rating",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/license/OSSAQMLicenseVisitor.py"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Quality",
          "sub_characteristics": [
            {
              "name": "Reliability",
              "measurable_concepts": [
                {
                  "name": "Number of releases",
                  "impact": "POSITIVE",
                  "entity": "releases",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of the number of releases",
                  "quality_requirement": "Number of releases affects reliability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "ReleaseCount",
                      "unit": "release(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/numberofreleases/ReleaseCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Reliability Rating",
                  "impact": "POSITIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the reliability rating of a repository",
                  "quality_requirement": "Reliability affects quality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Level of Reliability",
                      "unit": "rating",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/reliability_rating/LevelOfReliabilityVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Average number of functions per class",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the average number of methods per class",
                  "quality_requirement": "Increased number of methods per class affects quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Avg number of functions per class",
                      "unit": "function(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                      "base_measures": [
                        {
                          "name": "Number of functions",
                          "unit": "function(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/avg_number_of_methods_per_class/FunctionsCountVisitor.py"
                        },
                        {
                          "name": "Number of classes",
                          "unit": "class(es)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/size/number_of_classes/ClassesCountVisitor.py"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "Maintainability",
              "measurable_concepts": [
                {
                  "name": "Ease of Maintenance",
                  "impact": "POSITIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the maintainability rating of a repository",
                  "quality_requirement": "Maintainability affects quality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Sqale Rating",
                      "unit": "rating",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/maintainability_rating/SqaleRatingVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Documentation",
                  "impact": "NEGATIVE",
                  "entity": "text files in the repository",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the average Gunning Fog Index of files in the repository",
                  "quality_requirement": "Smaller Gunning Fog Index affects the readability of documentation positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Average Gunning Fog Index",
                      "unit": "value",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/gunning_fog/AvgGunningFogIndexVisitor.py"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Security",
              "measurable_concepts": [
                {
                  "name": "Security Rating",
                  "impact": "POSITIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the security rating of a repository",
                  "quality_requirement": "Security affects quality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Level of Security",
                      "unit": "rating",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/security_rating/LevelOfSecurityVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Contributors",
                  "impact": "POSITIVE",
                  "entity": "contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors in the project",
                  "quality_requirement": "Increased number of contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/PyGithubCommunityCountVisitor.py"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Code Quality",
              "measurable_concepts": [
                {
                  "name": "Documentation",
                  "impact": "NEGATIVE",
                  "entity": "text files in the repository",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the average Gunning Fog Index of files in the repository",
                  "quality_requirement": "Smaller Gunning Fog Index affects the readability of documentation positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Average Gunning Fog Index",
                      "unit": "value",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/gunning_fog/AvgGunningFogIndexVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Duration",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the duration to resolve issues",
                  "quality_requirement": "Longer durations to resolve issues affect community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Closed Issue Resolution Duration",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/DurationToResolveIssuesVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Throughput",
                  "impact": "POSITIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the ratio of closed issues to total issues in the project",
                  "quality_requirement": "Increased closed issues to total issues ratio affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of closed issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurClosedIssuesCountVisitor.py"
                    },
                    {
                      "name": "Number of total issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Time to Respond to Issues",
                  "impact": "NEGATIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the first response time to issues",
                  "quality_requirement": "Affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Issue Response Time",
                      "unit": "second(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/IssueResponseTimeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Resolution Duration",
                  "impact": "NEGATIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The duration of time taken to accept or decline a pull request",
                  "quality_requirement": "Longer time to resolve pull requests affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Duration to Resolve Pull Requests",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_requests_duration/DurationToResolvePullRequestsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Age Average",
                  "impact": "NEGATIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of how long issues have been open for",
                  "quality_requirement": "Long open issue age affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Open Issue Age",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/staleness/OpenIssueAgeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of New Contributors",
                  "impact": "POSITIVE",
                  "entity": "project contributors",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the new contributors to the project",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Contributors Count",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/open_participation/NewContributorsCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "New Contributors Closing Issues",
                  "impact": "POSITIVE",
                  "entity": "issues in the issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "New contributors closing issues in the issue tracker",
                  "quality_requirement": "New contributors closing issues affect community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of issues closed by new contributors",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/communitycapability/community_growth/ClosedIssuesCountByNewContributorsAggregator.py",
                      "base_measures": [
                        {
                          "name": "New Contributors list",
                          "unit": "contributor(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/communitycapability/community_growth/NewContributorsVisitor.py"
                        }
                      ]
                    },
                    {
                      "name": "Percentage of issues closed by new contributors",
                      "unit": "percentage",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/communitycapability/community_growth/ClosedIssuesPercentageByNewContributorsAggregator.py",
                      "base_measures": [
                        {
                          "name": "New Contributors list",
                          "unit": "contributor(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/communitycapability/community_growth/NewContributorsVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Inactive Contributor Count In A Period",
                  "impact": "NEGATIVE",
                  "entity": "contributors in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors who have gone inactive in the analyzed period",
                  "quality_requirement": "Developers going inactive affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of inactive contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/community_growth/InactiveContributorCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Time to fix bugs",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the time to fix bugs",
                  "quality_requirement": "Longer time to fix bugs affects quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Time to fix bugs",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/time_to_fix_bugs/AvgTimeToFixBugsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Average Length of Functions",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the average number lines of code per function in the source code",
                  "quality_requirement": "Affects project size negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Avg Lines of Code per Function",
                      "unit": "lines",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/size/avg_length_of_functions/AvgLinesOfCodePerFunctionVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Classes",
                  "impact": "POSITIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the number of classes in the repository",
                  "quality_requirement": "Affects project size negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Count of classes",
                      "unit": "ranking",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/size/number_of_classes/ClassesCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Files",
                  "impact": "POSITIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the number of files in the repository",
                  "quality_requirement": "Affects project size negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Count of files",
                      "unit": "ranking",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/size/number_of_files/FilesCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of bugs",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of bugs in the repository",
                  "quality_requirement": "Affects code quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of issues labeled as bugs",
                      "unit": "bug(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/bug_fixing_cost/NumberOfBugsToFixVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Cyclomatic Complexity",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the cyclomatic complexity of the project",
                  "quality_requirement": "Affects complexity and quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Cyclomatic Complexity - Lizard",
                      "unit": "value",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/LizardCyclomaticComplexityVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Comment lines and code lines ratio",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the ratio of comment lines to code lines in the project",
                  "quality_requirement": "Affects code quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Comment to Code Ratio",
                      "unit": "ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/codecomplexity/CruzCodeQualityDerivedMeasureAggregator.py",
                      "base_measures": [
                        {
                          "name": "Lines of Code",
                          "unit": "line(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/codecomplexity/LizardLinesOfCodeVisitor.py"
                        },
                        {
                          "name": "Lines of Comments",
                          "unit": "line(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/codecomplexity/ClocNumberOfCommentsVisitor.py"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Support and Service",
          "sub_characteristics": [
            {
              "name": "Contributors",
              "measurable_concepts": [
                {
                  "name": "Community Interaction",
                  "impact": "POSITIVE",
                  "entity": "project contributors",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the community interaction of the project",
                  "quality_requirement": "Affects 'Community Exists' positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Repo Messages",
                      "unit": "comment(s) on pull requests",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/peer_influence/RepoMessagesVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Throughput",
                  "impact": "POSITIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the ratio of closed issues to total issues in the project",
                  "quality_requirement": "Increased closed issues to total issues ratio affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of closed issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurClosedIssuesCountVisitor.py"
                    },
                    {
                      "name": "Number of total issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Average Issue Response Time",
                  "impact": "POSITIVE",
                  "entity": "First comment on issues",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the average time to respond to issues",
                  "quality_requirement": "Affects 'Contact within reasonable time' positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Issue Response Time",
                      "unit": "issue",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/IssueResponseTimeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Code Changes Commits",
                  "impact": "POSITIVE",
                  "entity": "commits in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the total number of commits in the version control history",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Annual Commit Count",
                      "unit": "commit(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/popularity/AnnualCommitCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of releases",
                  "impact": "POSITIVE",
                  "entity": "releases",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of the number of releases",
                  "quality_requirement": "Number of releases affects reliability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "ReleaseCount",
                      "unit": "release(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/numberofreleases/ReleaseCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Code Changes Lines",
                  "impact": "NEGATIVE",
                  "entity": "amount of lines changed in pull requests",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the total number of lines changed",
                  "quality_requirement": "Affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Total Number of Line Changes",
                      "unit": "line(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/LinesChangedCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Request Commits",
                  "impact": "NEGATIVE",
                  "entity": "commits in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the average number of commits per pull request in the version control history",
                  "quality_requirement": "Affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Avg number of commits per pull requests",
                      "unit": "commit(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_commits/AvgNumberOfCommitsPerPRsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Accepted",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The amount of pull requests accepted in the project",
                  "quality_requirement": "Affects community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Change Requests Accepted Count",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/reviews_accepted/ReviewsAcceptedCountVisitor.py"
                    },
                    {
                      "name": "Reviews Accepted - Total PR Ratio",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/reviews_accepted/ReviewsAcceptedRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Declined",
                  "impact": "NEGATIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The amount of pull requests rejected in the project",
                  "quality_requirement": "Affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Reviews Declined Count",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/declined_changes/ReviewsDeclinedCountVisitor.py"
                    },
                    {
                      "name": "Reviews Declined - Total PR Ratio",
                      "unit": "ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                      "base_measures": [
                        {
                          "name": "Reviews Declined Count",
                          "unit": "pull request(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/product_evolution/declined_changes/ReviewsDeclinedCountVisitor.py"
                        },
                        {
                          "name": "Number of Total Issues",
                          "unit": "pull request(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Change Requests - Opened Pull Requests",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Number of opened pull requests",
                  "quality_requirement": "Pull requests are a proxy for community activity and affect community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of opened pull requests",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/opened_pull_requests/OpenedPullRequestCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Cyclomatic Complexity",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the cyclomatic complexity of the project",
                  "quality_requirement": "Affects complexity and quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Cyclomatic Complexity - Lizard",
                      "unit": "value",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/LizardCyclomaticComplexityVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Comment lines and code lines ratio",
                  "impact": "NEGATIVE",
                  "entity": "source code",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculating the ratio of comment lines to code lines in the project",
                  "quality_requirement": "Affects code quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Comment to Code Ratio",
                      "unit": "ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/codecomplexity/CruzCodeQualityDerivedMeasureAggregator.py",
                      "base_measures": [
                        {
                          "name": "Lines of Code",
                          "unit": "line(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/codecomplexity/LizardLinesOfCodeVisitor.py"
                        },
                        {
                          "name": "Lines of Comments",
                          "unit": "line(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/codecomplexity/ClocNumberOfCommentsVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Number of New Contributors",
                  "impact": "POSITIVE",
                  "entity": "project contributors",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the new contributors to the project",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Contributors Count",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/open_participation/NewContributorsCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Contributors",
                  "impact": "POSITIVE",
                  "entity": "contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors in the project",
                  "quality_requirement": "Increased number of contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/PyGithubCommunityCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Maintainer Organization",
                  "impact": "POSITIVE",
                  "entity": "contributor list",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of the number of maintainer organizations",
                  "quality_requirement": "Affects support and service positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Organization Count",
                      "unit": "organization(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/maintainer_organization/OrgCountMeasureVisitor.py"
                    }
                  ]
                },
                {
                  "name": "New Contributors Closing Issues",
                  "impact": "POSITIVE",
                  "entity": "issues in the issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "New contributors closing issues in the issue tracker",
                  "quality_requirement": "New contributors closing issues affect community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of issues closed by new contributors",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/communitycapability/community_growth/ClosedIssuesCountByNewContributorsAggregator.py",
                      "base_measures": [
                        {
                          "name": "New Contributors list",
                          "unit": "contributor(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/communitycapability/community_growth/NewContributorsVisitor.py"
                        }
                      ]
                    },
                    {
                      "name": "Percentage of issues closed by new contributors",
                      "unit": "percentage",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/communitycapability/community_growth/ClosedIssuesPercentageByNewContributorsAggregator.py",
                      "base_measures": [
                        {
                          "name": "New Contributors list",
                          "unit": "contributor(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/communitycapability/community_growth/NewContributorsVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Inactive Contributor Count In A Period",
                  "impact": "NEGATIVE",
                  "entity": "contributors in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors who have gone inactive in the analyzed period",
                  "quality_requirement": "Developers going inactive affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of inactive contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/community_growth/InactiveContributorCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number Of Downloads",
                  "impact": "POSITIVE",
                  "entity": "release assets",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Number of Downloads measures the relative and absolute traffic to a project’s repository on the frequency of downloaded or cloned software artifacts",
                  "quality_requirement": "Increasing download numbers indicates interest in the project",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Count of asset downloads",
                      "unit": "asset(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/community_growth/AssetDownloadCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Time since last commit",
                  "impact": "NEGATIVE",
                  "entity": "Commit history",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculation of the time since the last commit",
                  "quality_requirement": "Non-regular updates affect short-term support negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Time Since Last Commit Measure",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/updated_since/TimeSinceLastCommitVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Commit Frequency",
                  "impact": "POSITIVE",
                  "entity": "commit(s)",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of the average commits in a specified date range",
                  "quality_requirement": "Commit frequency affects short-term support positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Commit Count",
                      "unit": "commit(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/CommitCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Duration",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the duration to resolve issues",
                  "quality_requirement": "Longer durations to resolve issues affect community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Closed Issue Resolution Duration",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/DurationToResolveIssuesVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Request Reviews",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the percentage of closed pull requests that have been reviewed",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Percentage of PRs reviewed",
                      "unit": "percentage",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_reviews/PercentageOfPRsReviewedVisitor.py"
                    },
                    {
                      "name": "Avg number of contributors per pull requests",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_contributors/AvgNumberOfContributorsPerPRsVisitor.py"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Community and Adoption",
          "sub_characteristics": [
            {
              "name": "Coordination",
              "measurable_concepts": [
                {
                  "name": "Change Requests Duration",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the duration to resolve issues",
                  "quality_requirement": "Longer durations to resolve issues affect community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Closed Issue Resolution Duration",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/DurationToResolveIssuesVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Throughput",
                  "impact": "POSITIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the ratio of closed issues to total issues in the project",
                  "quality_requirement": "Increased closed issues to total issues ratio affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of closed issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurClosedIssuesCountVisitor.py"
                    },
                    {
                      "name": "Number of total issues",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Resolution Duration",
                  "impact": "NEGATIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The duration of time taken to accept or decline a pull request",
                  "quality_requirement": "Longer time to resolve pull requests affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Duration to Resolve Pull Requests",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_requests_duration/DurationToResolvePullRequestsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Age Average",
                  "impact": "NEGATIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of how long issues have been open for",
                  "quality_requirement": "Long open issue age affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Open Issue Age",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/staleness/OpenIssueAgeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Contributors",
                  "impact": "POSITIVE",
                  "entity": "contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors in the project",
                  "quality_requirement": "Increased number of contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/PyGithubCommunityCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Time to Respond to Issues",
                  "impact": "NEGATIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the first response time to issues",
                  "quality_requirement": "Affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Issue Response Time",
                      "unit": "second(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/IssueResponseTimeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Code Changes Commits",
                  "impact": "POSITIVE",
                  "entity": "commits in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the total number of commits in the version control history",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Annual Commit Count",
                      "unit": "commit(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/popularity/AnnualCommitCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Code Changes Lines",
                  "impact": "NEGATIVE",
                  "entity": "amount of lines changed in pull requests",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the total number of lines changed",
                  "quality_requirement": "Affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Total Number of Line Changes",
                      "unit": "line(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/LinesChangedCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Request Commits",
                  "impact": "NEGATIVE",
                  "entity": "commits in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the average number of commits per pull request in the version control history",
                  "quality_requirement": "Affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Avg number of commits per pull requests",
                      "unit": "commit(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_commits/AvgNumberOfCommitsPerPRsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Request Contributors",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the average number of contributors per pull request",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Avg number of contributors per pull requests",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_contributors/AvgNumberOfContributorsPerPRsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Request Reviews",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the percentage of closed pull requests that have been reviewed",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Percentage of PRs reviewed",
                      "unit": "percentage",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_reviews/PercentageOfPRsReviewedVisitor.py"
                    },
                    {
                      "name": "Avg number of contributors per pull requests",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/change_request_contributors/AvgNumberOfContributorsPerPRsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of New Contributors",
                  "impact": "POSITIVE",
                  "entity": "project contributors",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the new contributors to the project",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Contributors Count",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/open_participation/NewContributorsCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "New Contributors Closing Issues",
                  "impact": "POSITIVE",
                  "entity": "issues in the issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "New contributors closing issues in the issue tracker",
                  "quality_requirement": "New contributors closing issues affect community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of issues closed by new contributors",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/communitycapability/community_growth/ClosedIssuesCountByNewContributorsAggregator.py",
                      "base_measures": [
                        {
                          "name": "New Contributors list",
                          "unit": "contributor(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/communitycapability/community_growth/NewContributorsVisitor.py"
                        }
                      ]
                    },
                    {
                      "name": "Percentage of issues closed by new contributors",
                      "unit": "percentage",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/communitycapability/community_growth/ClosedIssuesPercentageByNewContributorsAggregator.py",
                      "base_measures": [
                        {
                          "name": "New Contributors list",
                          "unit": "contributor(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/communitycapability/community_growth/NewContributorsVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Inactive Contributor Count In A Period",
                  "impact": "NEGATIVE",
                  "entity": "contributors in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors who have gone inactive in the analyzed period",
                  "quality_requirement": "Developers going inactive affects community health and vitality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of inactive contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/community_growth/InactiveContributorCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number Of Downloads",
                  "impact": "POSITIVE",
                  "entity": "release assets",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Number of Downloads measures the relative and absolute traffic to a project’s repository on the frequency of downloaded or cloned software artifacts",
                  "quality_requirement": "Increasing download numbers indicates interest in the project",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Count of asset downloads",
                      "unit": "asset(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/community_growth/AssetDownloadCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Time to fix bugs",
                  "impact": "NEGATIVE",
                  "entity": "issues in issue tracker",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the time to fix bugs",
                  "quality_requirement": "Longer time to fix bugs affects quality negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Time to fix bugs",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/time_to_fix_bugs/AvgTimeToFixBugsVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of releases",
                  "impact": "POSITIVE",
                  "entity": "releases",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of the number of releases",
                  "quality_requirement": "Number of releases affects reliability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "ReleaseCount",
                      "unit": "release(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/numberofreleases/ReleaseCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Time since last commit",
                  "impact": "NEGATIVE",
                  "entity": "Commit history",
                  "relevant_oss_aspect": "CODE",
                  "information_need": "Calculation of the time since the last commit",
                  "quality_requirement": "Non-regular updates affect short-term support negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Time Since Last Commit Measure",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/updated_since/TimeSinceLastCommitVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Commit Frequency",
                  "impact": "POSITIVE",
                  "entity": "commit(s)",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of the average commits in a specified date range",
                  "quality_requirement": "Commit frequency affects short-term support positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Commit Count",
                      "unit": "commit(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/CommitCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Average Issue Response Time",
                  "impact": "POSITIVE",
                  "entity": "First comment on issues",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the average time to respond to issues",
                  "quality_requirement": "Affects 'Contact within reasonable time' positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Issue Response Time",
                      "unit": "issue",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/codecomplexity/IssueResponseTimeVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Core Maintainers",
                  "impact": "POSITIVE",
                  "entity": "core contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of core contributors in the project",
                  "quality_requirement": "Increased number of core contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Truck Factor",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/TruckFactorVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Accepted",
                  "impact": "POSITIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The amount of pull requests accepted in the project",
                  "quality_requirement": "Affects community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Change Requests Accepted Count",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/reviews_accepted/ReviewsAcceptedCountVisitor.py"
                    },
                    {
                      "name": "Reviews Accepted - Total PR Ratio",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/reviews_accepted/ReviewsAcceptedRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Change Requests Declined",
                  "impact": "NEGATIVE",
                  "entity": "pull requests in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "The amount of pull requests rejected in the project",
                  "quality_requirement": "Affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Reviews Declined Count",
                      "unit": "pull request(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/declined_changes/ReviewsDeclinedCountVisitor.py"
                    },
                    {
                      "name": "Reviews Declined - Total PR Ratio",
                      "unit": "ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                      "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                      "base_measures": [
                        {
                          "name": "Reviews Declined Count",
                          "unit": "pull request(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/visitors/product_evolution/declined_changes/ReviewsDeclinedCountVisitor.py"
                        },
                        {
                          "name": "Number of Total Issues",
                          "unit": "pull request(s)",
                          "scale": 1,
                          "measurement_method": "AUTOMATIC",
                          "visitor": "./testing/subcharacteristic/communitycapability/AugurTotalIssuesCountVisitor.py"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Issues New",
                  "impact": "POSITIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Amount of new issues in the version control history",
                  "quality_requirement": "New issues are a proxy for activity and affect community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Issues Count",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesCountVisitor.py"
                    },
                    {
                      "name": "New Issues Ratio",
                      "unit": "new issues in a period - total issues ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issues Active",
                  "impact": "POSITIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Amount of active issues in the version control history",
                  "quality_requirement": "Updating issues signals community activity and affect community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Issues Count",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesCountVisitor.py"
                    },
                    {
                      "name": "New Issues Ratio",
                      "unit": "new issues in a period - total issues ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_new/NewIssuesRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issues Closed",
                  "impact": "POSITIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Amount of closed issues in the version control history",
                  "quality_requirement": "Closing issues is a proxy for community activity and affect community capability positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Closed Issues Count",
                      "unit": "issue(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/subcharacteristic/communitycapability/AugurClosedIssuesCountVisitor.py"
                    },
                    {
                      "name": "Closed Issues Ratio",
                      "unit": "closed issues in a period - total issues ratio",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/issue_resolution/issues_closed/ClosedIssuesRatioVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Issue Age Average",
                  "impact": "NEGATIVE",
                  "entity": "issues in version control history",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculation of how long issues have been open for",
                  "quality_requirement": "Long open issue age affects community capability negatively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Open Issue Age",
                      "unit": "day(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/product_evolution/staleness/OpenIssueAgeVisitor.py"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Community Size",
              "measurable_concepts": [
                {
                  "name": "Number of Contributors",
                  "impact": "POSITIVE",
                  "entity": "contributors in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of contributors in the project",
                  "quality_requirement": "Increased number of contributors affects overall costs positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Number of contributors",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/communitycapability/PyGithubCommunityCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of New Contributors",
                  "impact": "POSITIVE",
                  "entity": "project contributors",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the new contributors to the project",
                  "quality_requirement": "Affects community health and vitality positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "New Contributors Count",
                      "unit": "contributor(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/open_participation/NewContributorsCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Watchers - User community witnessing quality",
                  "impact": "POSITIVE",
                  "entity": "watchers in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of watchers in the project",
                  "quality_requirement": "Increased number of watchers affects community size positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Watchers Count",
                      "unit": "watcher(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/popularity/WatchersCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Stars - User community witnessing quality",
                  "impact": "POSITIVE",
                  "entity": "stars in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of stars in the project",
                  "quality_requirement": "Increased number of stars affects community size positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Stars Count",
                      "unit": "star(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/popularity/StarsCountVisitor.py"
                    }
                  ]
                },
                {
                  "name": "Number of Forks - User community witnessing quality",
                  "impact": "POSITIVE",
                  "entity": "forks in the repository",
                  "relevant_oss_aspect": "COMMUNITY",
                  "information_need": "Calculating the number of forks in the project",
                  "quality_requirement": "Increased number of forks affects community size positively",
                  "normalize_visitor": "./testing/visitors/NoOpNormalizeVisitor.py",
                  "aggregate_visitor": "./testing/visitors/AddAggregateVisitor.py",
                  "measures": [
                    {
                      "name": "Forks Count",
                      "unit": "fork(s)",
                      "scale": 1,
                      "measurement_method": "AUTOMATIC",
                      "visitor": "./testing/visitors/popularity/ForksCountVisitor.py"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}